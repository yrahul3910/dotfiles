[user]
	name = Rahul Yedida
	email = yrahul3910@gmail.com
[core]
	editor = nvim
[credential "https://github.com"]
	helper = 
	helper = !/usr/local/bin/gh auth git-credential
[credential "https://gist.github.com"]
	helper = 
	helper = !/usr/local/bin/gh auth git-credential
[alias]
	b = branch
	bd = branch -D

	c = checkout
    cp = cherry-pick
    cpc = cherry-pick --continue
	d = diff
	ds = diff --staged
	l = log --oneline
    lg = log --graph --oneline --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
    lgd = log --graph --oneline --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset) => %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    rpo = "!git remote prune origin && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == \"[gone]\" {sub(\"refs/heads/\", \"\", $1); print $1}'); do git branch -D $branch || echo \"Could not delete $branch (unmerged?)\"; done"
	n = switch -c
	p = push
	pu = !git pull $(git remote) $(git branch --show-current)
	pushf = !git push --force-with-lease --force-if-includes
	rs = restore --staged
	s = status
	sd = stash drop
	sl = stash list
	sp = stash push
	spo = stash pop
	ss = stash push -S
	ssh = stash show
	unfck = reset --hard HEAD

[delta]
	side-by-side = true

[diff]
	algorithm = histogram

[commit]
	verbose = true

[core]
	autocrlf = false

[diff]
	algorithm = histogram

[gc]
	pruneexpire = now

[grep]
	linenumber = true

[help]
	autocorrect = prompt

[merge]
	conflictstyle = diff3
	autostash = true
	tool = vimdiff

[mergetool]
	prompt = false

[pull]
	rebase = true

[push]
	autosetupremote = true
	default = simple

[rebase]
	autostash = true

[rerere]
	autosquash = true
	enabled = true
	autoupdate = true
